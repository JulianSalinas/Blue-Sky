#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace blueskyapi
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="blueskytec")]
	public partial class LinqToSqlDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertASIGNACION(ASIGNACION instance);
    partial void UpdateASIGNACION(ASIGNACION instance);
    partial void DeleteASIGNACION(ASIGNACION instance);
    partial void InsertASIGNACION_ESTUDIANTE(ASIGNACION_ESTUDIANTE instance);
    partial void UpdateASIGNACION_ESTUDIANTE(ASIGNACION_ESTUDIANTE instance);
    partial void DeleteASIGNACION_ESTUDIANTE(ASIGNACION_ESTUDIANTE instance);
    partial void InsertCURSO(CURSO instance);
    partial void UpdateCURSO(CURSO instance);
    partial void DeleteCURSO(CURSO instance);
    partial void InsertCURSO_ESTUDIANTE(CURSO_ESTUDIANTE instance);
    partial void UpdateCURSO_ESTUDIANTE(CURSO_ESTUDIANTE instance);
    partial void DeleteCURSO_ESTUDIANTE(CURSO_ESTUDIANTE instance);
    partial void InsertESTUDIANTE(ESTUDIANTE instance);
    partial void UpdateESTUDIANTE(ESTUDIANTE instance);
    partial void DeleteESTUDIANTE(ESTUDIANTE instance);
    partial void InsertMENSAJE(MENSAJE instance);
    partial void UpdateMENSAJE(MENSAJE instance);
    partial void DeleteMENSAJE(MENSAJE instance);
    partial void InsertPROFESOR(PROFESOR instance);
    partial void UpdatePROFESOR(PROFESOR instance);
    partial void DeletePROFESOR(PROFESOR instance);
    #endregion
		
		public LinqToSqlDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["blueskytecConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public LinqToSqlDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqToSqlDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqToSqlDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqToSqlDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ASIGNACION> ASIGNACION
		{
			get
			{
				return this.GetTable<ASIGNACION>();
			}
		}
		
		public System.Data.Linq.Table<ASIGNACION_ESTUDIANTE> ASIGNACION_ESTUDIANTE
		{
			get
			{
				return this.GetTable<ASIGNACION_ESTUDIANTE>();
			}
		}
		
		public System.Data.Linq.Table<CURSO> CURSO
		{
			get
			{
				return this.GetTable<CURSO>();
			}
		}
		
		public System.Data.Linq.Table<CURSO_ESTUDIANTE> CURSO_ESTUDIANTE
		{
			get
			{
				return this.GetTable<CURSO_ESTUDIANTE>();
			}
		}
		
		public System.Data.Linq.Table<ESTUDIANTE> ESTUDIANTE
		{
			get
			{
				return this.GetTable<ESTUDIANTE>();
			}
		}
		
		public System.Data.Linq.Table<MENSAJE> MENSAJE
		{
			get
			{
				return this.GetTable<MENSAJE>();
			}
		}
		
		public System.Data.Linq.Table<PROFESOR> PROFESOR
		{
			get
			{
				return this.GetTable<PROFESOR>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ASIGNACION")]
	public partial class ASIGNACION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _CURSO;
		
		private string _NOMBRE;
		
		private string _TIPO;
		
		private string _MEDIO_ENTREGA;
		
		private decimal _PORCENTAJE;
		
		private System.DateTime _FECHA_ENTREGA;
		
		private string _DESCRIPCION;
		
		private EntitySet<ASIGNACION_ESTUDIANTE> _ASIGNACION_ESTUDIANTE;
		
		private EntityRef<CURSO> _CURSO1;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnCURSOChanging(string value);
    partial void OnCURSOChanged();
    partial void OnNOMBREChanging(string value);
    partial void OnNOMBREChanged();
    partial void OnTIPOChanging(string value);
    partial void OnTIPOChanged();
    partial void OnMEDIO_ENTREGAChanging(string value);
    partial void OnMEDIO_ENTREGAChanged();
    partial void OnPORCENTAJEChanging(decimal value);
    partial void OnPORCENTAJEChanged();
    partial void OnFECHA_ENTREGAChanging(System.DateTime value);
    partial void OnFECHA_ENTREGAChanged();
    partial void OnDESCRIPCIONChanging(string value);
    partial void OnDESCRIPCIONChanged();
    #endregion
		
		public ASIGNACION()
		{
			this._ASIGNACION_ESTUDIANTE = new EntitySet<ASIGNACION_ESTUDIANTE>(new Action<ASIGNACION_ESTUDIANTE>(this.attach_ASIGNACION_ESTUDIANTE), new Action<ASIGNACION_ESTUDIANTE>(this.detach_ASIGNACION_ESTUDIANTE));
			this._CURSO1 = default(EntityRef<CURSO>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CURSO", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CURSO
		{
			get
			{
				return this._CURSO;
			}
			set
			{
				if ((this._CURSO != value))
				{
					if (this._CURSO1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCURSOChanging(value);
					this.SendPropertyChanging();
					this._CURSO = value;
					this.SendPropertyChanged("CURSO");
					this.OnCURSOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBRE", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string NOMBRE
		{
			get
			{
				return this._NOMBRE;
			}
			set
			{
				if ((this._NOMBRE != value))
				{
					this.OnNOMBREChanging(value);
					this.SendPropertyChanging();
					this._NOMBRE = value;
					this.SendPropertyChanged("NOMBRE");
					this.OnNOMBREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TIPO", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string TIPO
		{
			get
			{
				return this._TIPO;
			}
			set
			{
				if ((this._TIPO != value))
				{
					this.OnTIPOChanging(value);
					this.SendPropertyChanging();
					this._TIPO = value;
					this.SendPropertyChanged("TIPO");
					this.OnTIPOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MEDIO_ENTREGA", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MEDIO_ENTREGA
		{
			get
			{
				return this._MEDIO_ENTREGA;
			}
			set
			{
				if ((this._MEDIO_ENTREGA != value))
				{
					this.OnMEDIO_ENTREGAChanging(value);
					this.SendPropertyChanging();
					this._MEDIO_ENTREGA = value;
					this.SendPropertyChanged("MEDIO_ENTREGA");
					this.OnMEDIO_ENTREGAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PORCENTAJE", DbType="Decimal(18,0) NOT NULL")]
		public decimal PORCENTAJE
		{
			get
			{
				return this._PORCENTAJE;
			}
			set
			{
				if ((this._PORCENTAJE != value))
				{
					this.OnPORCENTAJEChanging(value);
					this.SendPropertyChanging();
					this._PORCENTAJE = value;
					this.SendPropertyChanged("PORCENTAJE");
					this.OnPORCENTAJEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FECHA_ENTREGA", DbType="DateTime NOT NULL")]
		public System.DateTime FECHA_ENTREGA
		{
			get
			{
				return this._FECHA_ENTREGA;
			}
			set
			{
				if ((this._FECHA_ENTREGA != value))
				{
					this.OnFECHA_ENTREGAChanging(value);
					this.SendPropertyChanging();
					this._FECHA_ENTREGA = value;
					this.SendPropertyChanged("FECHA_ENTREGA");
					this.OnFECHA_ENTREGAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DESCRIPCION", DbType="VarChar(1000) NOT NULL", CanBeNull=false)]
		public string DESCRIPCION
		{
			get
			{
				return this._DESCRIPCION;
			}
			set
			{
				if ((this._DESCRIPCION != value))
				{
					this.OnDESCRIPCIONChanging(value);
					this.SendPropertyChanging();
					this._DESCRIPCION = value;
					this.SendPropertyChanged("DESCRIPCION");
					this.OnDESCRIPCIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ASIGNACION_ASIGNACION_ESTUDIANTE", Storage="_ASIGNACION_ESTUDIANTE", ThisKey="ID", OtherKey="ASIGNACION")]
		public EntitySet<ASIGNACION_ESTUDIANTE> ASIGNACION_ESTUDIANTE
		{
			get
			{
				return this._ASIGNACION_ESTUDIANTE;
			}
			set
			{
				this._ASIGNACION_ESTUDIANTE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CURSO_ASIGNACION", Storage="_CURSO1", ThisKey="CURSO", OtherKey="ID", IsForeignKey=true)]
		public CURSO CURSO1
		{
			get
			{
				return this._CURSO1.Entity;
			}
			set
			{
				CURSO previousValue = this._CURSO1.Entity;
				if (((previousValue != value) 
							|| (this._CURSO1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CURSO1.Entity = null;
						previousValue.ASIGNACION.Remove(this);
					}
					this._CURSO1.Entity = value;
					if ((value != null))
					{
						value.ASIGNACION.Add(this);
						this._CURSO = value.ID;
					}
					else
					{
						this._CURSO = default(string);
					}
					this.SendPropertyChanged("CURSO1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ASIGNACION_ESTUDIANTE(ASIGNACION_ESTUDIANTE entity)
		{
			this.SendPropertyChanging();
			entity.ASIGNACION1 = this;
		}
		
		private void detach_ASIGNACION_ESTUDIANTE(ASIGNACION_ESTUDIANTE entity)
		{
			this.SendPropertyChanging();
			entity.ASIGNACION1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ASIGNACION_ESTUDIANTE")]
	public partial class ASIGNACION_ESTUDIANTE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _ESTUDIANTE;
		
		private string _ASIGNACION;
		
		private System.Nullable<decimal> _PORCENTAJE_OBTENIDO;
		
		private System.Nullable<decimal> _CALIFICACION;
		
		private EntityRef<ASIGNACION> _ASIGNACION1;
		
		private EntityRef<ESTUDIANTE> _ESTUDIANTE1;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnESTUDIANTEChanging(decimal value);
    partial void OnESTUDIANTEChanged();
    partial void OnASIGNACIONChanging(string value);
    partial void OnASIGNACIONChanged();
    partial void OnPORCENTAJE_OBTENIDOChanging(System.Nullable<decimal> value);
    partial void OnPORCENTAJE_OBTENIDOChanged();
    partial void OnCALIFICACIONChanging(System.Nullable<decimal> value);
    partial void OnCALIFICACIONChanged();
    #endregion
		
		public ASIGNACION_ESTUDIANTE()
		{
			this._ASIGNACION1 = default(EntityRef<ASIGNACION>);
			this._ESTUDIANTE1 = default(EntityRef<ESTUDIANTE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ESTUDIANTE", DbType="Decimal(10,0) NOT NULL", IsPrimaryKey=true)]
		public decimal ESTUDIANTE
		{
			get
			{
				return this._ESTUDIANTE;
			}
			set
			{
				if ((this._ESTUDIANTE != value))
				{
					if (this._ESTUDIANTE1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnESTUDIANTEChanging(value);
					this.SendPropertyChanging();
					this._ESTUDIANTE = value;
					this.SendPropertyChanged("ESTUDIANTE");
					this.OnESTUDIANTEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ASIGNACION", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ASIGNACION
		{
			get
			{
				return this._ASIGNACION;
			}
			set
			{
				if ((this._ASIGNACION != value))
				{
					if (this._ASIGNACION1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnASIGNACIONChanging(value);
					this.SendPropertyChanging();
					this._ASIGNACION = value;
					this.SendPropertyChanged("ASIGNACION");
					this.OnASIGNACIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PORCENTAJE_OBTENIDO", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> PORCENTAJE_OBTENIDO
		{
			get
			{
				return this._PORCENTAJE_OBTENIDO;
			}
			set
			{
				if ((this._PORCENTAJE_OBTENIDO != value))
				{
					this.OnPORCENTAJE_OBTENIDOChanging(value);
					this.SendPropertyChanging();
					this._PORCENTAJE_OBTENIDO = value;
					this.SendPropertyChanged("PORCENTAJE_OBTENIDO");
					this.OnPORCENTAJE_OBTENIDOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CALIFICACION", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> CALIFICACION
		{
			get
			{
				return this._CALIFICACION;
			}
			set
			{
				if ((this._CALIFICACION != value))
				{
					this.OnCALIFICACIONChanging(value);
					this.SendPropertyChanging();
					this._CALIFICACION = value;
					this.SendPropertyChanged("CALIFICACION");
					this.OnCALIFICACIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ASIGNACION_ASIGNACION_ESTUDIANTE", Storage="_ASIGNACION1", ThisKey="ASIGNACION", OtherKey="ID", IsForeignKey=true)]
		public ASIGNACION ASIGNACION1
		{
			get
			{
				return this._ASIGNACION1.Entity;
			}
			set
			{
				ASIGNACION previousValue = this._ASIGNACION1.Entity;
				if (((previousValue != value) 
							|| (this._ASIGNACION1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ASIGNACION1.Entity = null;
						previousValue.ASIGNACION_ESTUDIANTE.Remove(this);
					}
					this._ASIGNACION1.Entity = value;
					if ((value != null))
					{
						value.ASIGNACION_ESTUDIANTE.Add(this);
						this._ASIGNACION = value.ID;
					}
					else
					{
						this._ASIGNACION = default(string);
					}
					this.SendPropertyChanged("ASIGNACION1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ESTUDIANTE_ASIGNACION_ESTUDIANTE", Storage="_ESTUDIANTE1", ThisKey="ESTUDIANTE", OtherKey="CARNET", IsForeignKey=true)]
		public ESTUDIANTE ESTUDIANTE1
		{
			get
			{
				return this._ESTUDIANTE1.Entity;
			}
			set
			{
				ESTUDIANTE previousValue = this._ESTUDIANTE1.Entity;
				if (((previousValue != value) 
							|| (this._ESTUDIANTE1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ESTUDIANTE1.Entity = null;
						previousValue.ASIGNACION_ESTUDIANTE.Remove(this);
					}
					this._ESTUDIANTE1.Entity = value;
					if ((value != null))
					{
						value.ASIGNACION_ESTUDIANTE.Add(this);
						this._ESTUDIANTE = value.CARNET;
					}
					else
					{
						this._ESTUDIANTE = default(decimal);
					}
					this.SendPropertyChanged("ESTUDIANTE1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CURSO")]
	public partial class CURSO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _CODIGO;
		
		private decimal _NGRUPO;
		
		private string _NOMBRE;
		
		private decimal _PROFESOR;
		
		private System.DateTime _FECHA_INICIO;
		
		private EntitySet<ASIGNACION> _ASIGNACION;
		
		private EntitySet<CURSO_ESTUDIANTE> _CURSO_ESTUDIANTE;
		
		private EntitySet<MENSAJE> _MENSAJE;
		
		private EntityRef<PROFESOR> _PROFESOR1;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnCODIGOChanging(string value);
    partial void OnCODIGOChanged();
    partial void OnNGRUPOChanging(decimal value);
    partial void OnNGRUPOChanged();
    partial void OnNOMBREChanging(string value);
    partial void OnNOMBREChanged();
    partial void OnPROFESORChanging(decimal value);
    partial void OnPROFESORChanged();
    partial void OnFECHA_INICIOChanging(System.DateTime value);
    partial void OnFECHA_INICIOChanged();
    #endregion
		
		public CURSO()
		{
			this._ASIGNACION = new EntitySet<ASIGNACION>(new Action<ASIGNACION>(this.attach_ASIGNACION), new Action<ASIGNACION>(this.detach_ASIGNACION));
			this._CURSO_ESTUDIANTE = new EntitySet<CURSO_ESTUDIANTE>(new Action<CURSO_ESTUDIANTE>(this.attach_CURSO_ESTUDIANTE), new Action<CURSO_ESTUDIANTE>(this.detach_CURSO_ESTUDIANTE));
			this._MENSAJE = new EntitySet<MENSAJE>(new Action<MENSAJE>(this.attach_MENSAJE), new Action<MENSAJE>(this.detach_MENSAJE));
			this._PROFESOR1 = default(EntityRef<PROFESOR>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CODIGO", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CODIGO
		{
			get
			{
				return this._CODIGO;
			}
			set
			{
				if ((this._CODIGO != value))
				{
					this.OnCODIGOChanging(value);
					this.SendPropertyChanging();
					this._CODIGO = value;
					this.SendPropertyChanged("CODIGO");
					this.OnCODIGOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGRUPO", DbType="Decimal(10,0) NOT NULL")]
		public decimal NGRUPO
		{
			get
			{
				return this._NGRUPO;
			}
			set
			{
				if ((this._NGRUPO != value))
				{
					this.OnNGRUPOChanging(value);
					this.SendPropertyChanging();
					this._NGRUPO = value;
					this.SendPropertyChanged("NGRUPO");
					this.OnNGRUPOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBRE", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string NOMBRE
		{
			get
			{
				return this._NOMBRE;
			}
			set
			{
				if ((this._NOMBRE != value))
				{
					this.OnNOMBREChanging(value);
					this.SendPropertyChanging();
					this._NOMBRE = value;
					this.SendPropertyChanged("NOMBRE");
					this.OnNOMBREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PROFESOR", DbType="Decimal(10,0) NOT NULL")]
		public decimal PROFESOR
		{
			get
			{
				return this._PROFESOR;
			}
			set
			{
				if ((this._PROFESOR != value))
				{
					if (this._PROFESOR1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPROFESORChanging(value);
					this.SendPropertyChanging();
					this._PROFESOR = value;
					this.SendPropertyChanged("PROFESOR");
					this.OnPROFESORChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FECHA_INICIO", DbType="DateTime NOT NULL")]
		public System.DateTime FECHA_INICIO
		{
			get
			{
				return this._FECHA_INICIO;
			}
			set
			{
				if ((this._FECHA_INICIO != value))
				{
					this.OnFECHA_INICIOChanging(value);
					this.SendPropertyChanging();
					this._FECHA_INICIO = value;
					this.SendPropertyChanged("FECHA_INICIO");
					this.OnFECHA_INICIOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CURSO_ASIGNACION", Storage="_ASIGNACION", ThisKey="ID", OtherKey="CURSO")]
		public EntitySet<ASIGNACION> ASIGNACION
		{
			get
			{
				return this._ASIGNACION;
			}
			set
			{
				this._ASIGNACION.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CURSO_CURSO_ESTUDIANTE", Storage="_CURSO_ESTUDIANTE", ThisKey="ID", OtherKey="CURSO")]
		public EntitySet<CURSO_ESTUDIANTE> CURSO_ESTUDIANTE
		{
			get
			{
				return this._CURSO_ESTUDIANTE;
			}
			set
			{
				this._CURSO_ESTUDIANTE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CURSO_MENSAJE", Storage="_MENSAJE", ThisKey="ID", OtherKey="CURSO")]
		public EntitySet<MENSAJE> MENSAJE
		{
			get
			{
				return this._MENSAJE;
			}
			set
			{
				this._MENSAJE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PROFESOR_CURSO", Storage="_PROFESOR1", ThisKey="PROFESOR", OtherKey="CARNET", IsForeignKey=true)]
		public PROFESOR PROFESOR1
		{
			get
			{
				return this._PROFESOR1.Entity;
			}
			set
			{
				PROFESOR previousValue = this._PROFESOR1.Entity;
				if (((previousValue != value) 
							|| (this._PROFESOR1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PROFESOR1.Entity = null;
						previousValue.CURSO.Remove(this);
					}
					this._PROFESOR1.Entity = value;
					if ((value != null))
					{
						value.CURSO.Add(this);
						this._PROFESOR = value.CARNET;
					}
					else
					{
						this._PROFESOR = default(decimal);
					}
					this.SendPropertyChanged("PROFESOR1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ASIGNACION(ASIGNACION entity)
		{
			this.SendPropertyChanging();
			entity.CURSO1 = this;
		}
		
		private void detach_ASIGNACION(ASIGNACION entity)
		{
			this.SendPropertyChanging();
			entity.CURSO1 = null;
		}
		
		private void attach_CURSO_ESTUDIANTE(CURSO_ESTUDIANTE entity)
		{
			this.SendPropertyChanging();
			entity.CURSO1 = this;
		}
		
		private void detach_CURSO_ESTUDIANTE(CURSO_ESTUDIANTE entity)
		{
			this.SendPropertyChanging();
			entity.CURSO1 = null;
		}
		
		private void attach_MENSAJE(MENSAJE entity)
		{
			this.SendPropertyChanging();
			entity.CURSO1 = this;
		}
		
		private void detach_MENSAJE(MENSAJE entity)
		{
			this.SendPropertyChanging();
			entity.CURSO1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CURSO_ESTUDIANTE")]
	public partial class CURSO_ESTUDIANTE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _ESTUDIANTE;
		
		private string _CURSO;
		
		private EntityRef<CURSO> _CURSO1;
		
		private EntityRef<ESTUDIANTE> _ESTUDIANTE1;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnESTUDIANTEChanging(decimal value);
    partial void OnESTUDIANTEChanged();
    partial void OnCURSOChanging(string value);
    partial void OnCURSOChanged();
    #endregion
		
		public CURSO_ESTUDIANTE()
		{
			this._CURSO1 = default(EntityRef<CURSO>);
			this._ESTUDIANTE1 = default(EntityRef<ESTUDIANTE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ESTUDIANTE", DbType="Decimal(10,0) NOT NULL", IsPrimaryKey=true)]
		public decimal ESTUDIANTE
		{
			get
			{
				return this._ESTUDIANTE;
			}
			set
			{
				if ((this._ESTUDIANTE != value))
				{
					if (this._ESTUDIANTE1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnESTUDIANTEChanging(value);
					this.SendPropertyChanging();
					this._ESTUDIANTE = value;
					this.SendPropertyChanged("ESTUDIANTE");
					this.OnESTUDIANTEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CURSO", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CURSO
		{
			get
			{
				return this._CURSO;
			}
			set
			{
				if ((this._CURSO != value))
				{
					if (this._CURSO1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCURSOChanging(value);
					this.SendPropertyChanging();
					this._CURSO = value;
					this.SendPropertyChanged("CURSO");
					this.OnCURSOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CURSO_CURSO_ESTUDIANTE", Storage="_CURSO1", ThisKey="CURSO", OtherKey="ID", IsForeignKey=true)]
		public CURSO CURSO1
		{
			get
			{
				return this._CURSO1.Entity;
			}
			set
			{
				CURSO previousValue = this._CURSO1.Entity;
				if (((previousValue != value) 
							|| (this._CURSO1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CURSO1.Entity = null;
						previousValue.CURSO_ESTUDIANTE.Remove(this);
					}
					this._CURSO1.Entity = value;
					if ((value != null))
					{
						value.CURSO_ESTUDIANTE.Add(this);
						this._CURSO = value.ID;
					}
					else
					{
						this._CURSO = default(string);
					}
					this.SendPropertyChanged("CURSO1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ESTUDIANTE_CURSO_ESTUDIANTE", Storage="_ESTUDIANTE1", ThisKey="ESTUDIANTE", OtherKey="CARNET", IsForeignKey=true)]
		public ESTUDIANTE ESTUDIANTE1
		{
			get
			{
				return this._ESTUDIANTE1.Entity;
			}
			set
			{
				ESTUDIANTE previousValue = this._ESTUDIANTE1.Entity;
				if (((previousValue != value) 
							|| (this._ESTUDIANTE1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ESTUDIANTE1.Entity = null;
						previousValue.CURSO_ESTUDIANTE.Remove(this);
					}
					this._ESTUDIANTE1.Entity = value;
					if ((value != null))
					{
						value.CURSO_ESTUDIANTE.Add(this);
						this._ESTUDIANTE = value.CARNET;
					}
					else
					{
						this._ESTUDIANTE = default(decimal);
					}
					this.SendPropertyChanged("ESTUDIANTE1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ESTUDIANTE")]
	public partial class ESTUDIANTE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _CARNET;
		
		private string _CONTRASENHA;
		
		private string _NOMBRE;
		
		private string _CORREO;
		
		private EntitySet<ASIGNACION_ESTUDIANTE> _ASIGNACION_ESTUDIANTE;
		
		private EntitySet<CURSO_ESTUDIANTE> _CURSO_ESTUDIANTE;
		
		private EntitySet<MENSAJE> _MENSAJE;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCARNETChanging(decimal value);
    partial void OnCARNETChanged();
    partial void OnCONTRASENHAChanging(string value);
    partial void OnCONTRASENHAChanged();
    partial void OnNOMBREChanging(string value);
    partial void OnNOMBREChanged();
    partial void OnCORREOChanging(string value);
    partial void OnCORREOChanged();
    #endregion
		
		public ESTUDIANTE()
		{
			this._ASIGNACION_ESTUDIANTE = new EntitySet<ASIGNACION_ESTUDIANTE>(new Action<ASIGNACION_ESTUDIANTE>(this.attach_ASIGNACION_ESTUDIANTE), new Action<ASIGNACION_ESTUDIANTE>(this.detach_ASIGNACION_ESTUDIANTE));
			this._CURSO_ESTUDIANTE = new EntitySet<CURSO_ESTUDIANTE>(new Action<CURSO_ESTUDIANTE>(this.attach_CURSO_ESTUDIANTE), new Action<CURSO_ESTUDIANTE>(this.detach_CURSO_ESTUDIANTE));
			this._MENSAJE = new EntitySet<MENSAJE>(new Action<MENSAJE>(this.attach_MENSAJE), new Action<MENSAJE>(this.detach_MENSAJE));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CARNET", DbType="Decimal(10,0) NOT NULL", IsPrimaryKey=true)]
		public decimal CARNET
		{
			get
			{
				return this._CARNET;
			}
			set
			{
				if ((this._CARNET != value))
				{
					this.OnCARNETChanging(value);
					this.SendPropertyChanging();
					this._CARNET = value;
					this.SendPropertyChanged("CARNET");
					this.OnCARNETChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CONTRASENHA", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CONTRASENHA
		{
			get
			{
				return this._CONTRASENHA;
			}
			set
			{
				if ((this._CONTRASENHA != value))
				{
					this.OnCONTRASENHAChanging(value);
					this.SendPropertyChanging();
					this._CONTRASENHA = value;
					this.SendPropertyChanged("CONTRASENHA");
					this.OnCONTRASENHAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBRE", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string NOMBRE
		{
			get
			{
				return this._NOMBRE;
			}
			set
			{
				if ((this._NOMBRE != value))
				{
					this.OnNOMBREChanging(value);
					this.SendPropertyChanging();
					this._NOMBRE = value;
					this.SendPropertyChanged("NOMBRE");
					this.OnNOMBREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CORREO", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CORREO
		{
			get
			{
				return this._CORREO;
			}
			set
			{
				if ((this._CORREO != value))
				{
					this.OnCORREOChanging(value);
					this.SendPropertyChanging();
					this._CORREO = value;
					this.SendPropertyChanged("CORREO");
					this.OnCORREOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ESTUDIANTE_ASIGNACION_ESTUDIANTE", Storage="_ASIGNACION_ESTUDIANTE", ThisKey="CARNET", OtherKey="ESTUDIANTE")]
		public EntitySet<ASIGNACION_ESTUDIANTE> ASIGNACION_ESTUDIANTE
		{
			get
			{
				return this._ASIGNACION_ESTUDIANTE;
			}
			set
			{
				this._ASIGNACION_ESTUDIANTE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ESTUDIANTE_CURSO_ESTUDIANTE", Storage="_CURSO_ESTUDIANTE", ThisKey="CARNET", OtherKey="ESTUDIANTE")]
		public EntitySet<CURSO_ESTUDIANTE> CURSO_ESTUDIANTE
		{
			get
			{
				return this._CURSO_ESTUDIANTE;
			}
			set
			{
				this._CURSO_ESTUDIANTE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ESTUDIANTE_MENSAJE", Storage="_MENSAJE", ThisKey="CARNET", OtherKey="ESTUDIANTE")]
		public EntitySet<MENSAJE> MENSAJE
		{
			get
			{
				return this._MENSAJE;
			}
			set
			{
				this._MENSAJE.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ASIGNACION_ESTUDIANTE(ASIGNACION_ESTUDIANTE entity)
		{
			this.SendPropertyChanging();
			entity.ESTUDIANTE1 = this;
		}
		
		private void detach_ASIGNACION_ESTUDIANTE(ASIGNACION_ESTUDIANTE entity)
		{
			this.SendPropertyChanging();
			entity.ESTUDIANTE1 = null;
		}
		
		private void attach_CURSO_ESTUDIANTE(CURSO_ESTUDIANTE entity)
		{
			this.SendPropertyChanging();
			entity.ESTUDIANTE1 = this;
		}
		
		private void detach_CURSO_ESTUDIANTE(CURSO_ESTUDIANTE entity)
		{
			this.SendPropertyChanging();
			entity.ESTUDIANTE1 = null;
		}
		
		private void attach_MENSAJE(MENSAJE entity)
		{
			this.SendPropertyChanging();
			entity.ESTUDIANTE1 = this;
		}
		
		private void detach_MENSAJE(MENSAJE entity)
		{
			this.SendPropertyChanging();
			entity.ESTUDIANTE1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MENSAJE")]
	public partial class MENSAJE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _ESTUDIANTE;
		
		private decimal _PROFESOR;
		
		private string _CURSO;
		
		private System.DateTime _FECHA;
		
		private string _CONTENIDO;
		
		private EntityRef<ESTUDIANTE> _ESTUDIANTE1;
		
		private EntityRef<CURSO> _CURSO1;
		
		private EntityRef<PROFESOR> _PROFESOR1;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnESTUDIANTEChanging(decimal value);
    partial void OnESTUDIANTEChanged();
    partial void OnPROFESORChanging(decimal value);
    partial void OnPROFESORChanged();
    partial void OnCURSOChanging(string value);
    partial void OnCURSOChanged();
    partial void OnFECHAChanging(System.DateTime value);
    partial void OnFECHAChanged();
    partial void OnCONTENIDOChanging(string value);
    partial void OnCONTENIDOChanged();
    #endregion
		
		public MENSAJE()
		{
			this._ESTUDIANTE1 = default(EntityRef<ESTUDIANTE>);
			this._CURSO1 = default(EntityRef<CURSO>);
			this._PROFESOR1 = default(EntityRef<PROFESOR>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ESTUDIANTE", DbType="Decimal(10,0) NOT NULL", IsPrimaryKey=true)]
		public decimal ESTUDIANTE
		{
			get
			{
				return this._ESTUDIANTE;
			}
			set
			{
				if ((this._ESTUDIANTE != value))
				{
					if (this._ESTUDIANTE1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnESTUDIANTEChanging(value);
					this.SendPropertyChanging();
					this._ESTUDIANTE = value;
					this.SendPropertyChanged("ESTUDIANTE");
					this.OnESTUDIANTEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PROFESOR", DbType="Decimal(10,0) NOT NULL", IsPrimaryKey=true)]
		public decimal PROFESOR
		{
			get
			{
				return this._PROFESOR;
			}
			set
			{
				if ((this._PROFESOR != value))
				{
					if (this._PROFESOR1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPROFESORChanging(value);
					this.SendPropertyChanging();
					this._PROFESOR = value;
					this.SendPropertyChanged("PROFESOR");
					this.OnPROFESORChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CURSO", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CURSO
		{
			get
			{
				return this._CURSO;
			}
			set
			{
				if ((this._CURSO != value))
				{
					if (this._CURSO1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCURSOChanging(value);
					this.SendPropertyChanging();
					this._CURSO = value;
					this.SendPropertyChanged("CURSO");
					this.OnCURSOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FECHA", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime FECHA
		{
			get
			{
				return this._FECHA;
			}
			set
			{
				if ((this._FECHA != value))
				{
					this.OnFECHAChanging(value);
					this.SendPropertyChanging();
					this._FECHA = value;
					this.SendPropertyChanged("FECHA");
					this.OnFECHAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CONTENIDO", DbType="VarChar(1000)")]
		public string CONTENIDO
		{
			get
			{
				return this._CONTENIDO;
			}
			set
			{
				if ((this._CONTENIDO != value))
				{
					this.OnCONTENIDOChanging(value);
					this.SendPropertyChanging();
					this._CONTENIDO = value;
					this.SendPropertyChanged("CONTENIDO");
					this.OnCONTENIDOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ESTUDIANTE_MENSAJE", Storage="_ESTUDIANTE1", ThisKey="ESTUDIANTE", OtherKey="CARNET", IsForeignKey=true)]
		public ESTUDIANTE ESTUDIANTE1
		{
			get
			{
				return this._ESTUDIANTE1.Entity;
			}
			set
			{
				ESTUDIANTE previousValue = this._ESTUDIANTE1.Entity;
				if (((previousValue != value) 
							|| (this._ESTUDIANTE1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ESTUDIANTE1.Entity = null;
						previousValue.MENSAJE.Remove(this);
					}
					this._ESTUDIANTE1.Entity = value;
					if ((value != null))
					{
						value.MENSAJE.Add(this);
						this._ESTUDIANTE = value.CARNET;
					}
					else
					{
						this._ESTUDIANTE = default(decimal);
					}
					this.SendPropertyChanged("ESTUDIANTE1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CURSO_MENSAJE", Storage="_CURSO1", ThisKey="CURSO", OtherKey="ID", IsForeignKey=true)]
		public CURSO CURSO1
		{
			get
			{
				return this._CURSO1.Entity;
			}
			set
			{
				CURSO previousValue = this._CURSO1.Entity;
				if (((previousValue != value) 
							|| (this._CURSO1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CURSO1.Entity = null;
						previousValue.MENSAJE.Remove(this);
					}
					this._CURSO1.Entity = value;
					if ((value != null))
					{
						value.MENSAJE.Add(this);
						this._CURSO = value.ID;
					}
					else
					{
						this._CURSO = default(string);
					}
					this.SendPropertyChanged("CURSO1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PROFESOR_MENSAJE", Storage="_PROFESOR1", ThisKey="PROFESOR", OtherKey="CARNET", IsForeignKey=true)]
		public PROFESOR PROFESOR1
		{
			get
			{
				return this._PROFESOR1.Entity;
			}
			set
			{
				PROFESOR previousValue = this._PROFESOR1.Entity;
				if (((previousValue != value) 
							|| (this._PROFESOR1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PROFESOR1.Entity = null;
						previousValue.MENSAJE.Remove(this);
					}
					this._PROFESOR1.Entity = value;
					if ((value != null))
					{
						value.MENSAJE.Add(this);
						this._PROFESOR = value.CARNET;
					}
					else
					{
						this._PROFESOR = default(decimal);
					}
					this.SendPropertyChanged("PROFESOR1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PROFESOR")]
	public partial class PROFESOR : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _CARNET;
		
		private string _CONTRASENHA;
		
		private string _NOMBRE;
		
		private string _CORREO;
		
		private EntitySet<CURSO> _CURSO;
		
		private EntitySet<MENSAJE> _MENSAJE;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCARNETChanging(decimal value);
    partial void OnCARNETChanged();
    partial void OnCONTRASENHAChanging(string value);
    partial void OnCONTRASENHAChanged();
    partial void OnNOMBREChanging(string value);
    partial void OnNOMBREChanged();
    partial void OnCORREOChanging(string value);
    partial void OnCORREOChanged();
    #endregion
		
		public PROFESOR()
		{
			this._CURSO = new EntitySet<CURSO>(new Action<CURSO>(this.attach_CURSO), new Action<CURSO>(this.detach_CURSO));
			this._MENSAJE = new EntitySet<MENSAJE>(new Action<MENSAJE>(this.attach_MENSAJE), new Action<MENSAJE>(this.detach_MENSAJE));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CARNET", DbType="Decimal(10,0) NOT NULL", IsPrimaryKey=true)]
		public decimal CARNET
		{
			get
			{
				return this._CARNET;
			}
			set
			{
				if ((this._CARNET != value))
				{
					this.OnCARNETChanging(value);
					this.SendPropertyChanging();
					this._CARNET = value;
					this.SendPropertyChanged("CARNET");
					this.OnCARNETChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CONTRASENHA", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CONTRASENHA
		{
			get
			{
				return this._CONTRASENHA;
			}
			set
			{
				if ((this._CONTRASENHA != value))
				{
					this.OnCONTRASENHAChanging(value);
					this.SendPropertyChanging();
					this._CONTRASENHA = value;
					this.SendPropertyChanged("CONTRASENHA");
					this.OnCONTRASENHAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBRE", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string NOMBRE
		{
			get
			{
				return this._NOMBRE;
			}
			set
			{
				if ((this._NOMBRE != value))
				{
					this.OnNOMBREChanging(value);
					this.SendPropertyChanging();
					this._NOMBRE = value;
					this.SendPropertyChanged("NOMBRE");
					this.OnNOMBREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CORREO", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CORREO
		{
			get
			{
				return this._CORREO;
			}
			set
			{
				if ((this._CORREO != value))
				{
					this.OnCORREOChanging(value);
					this.SendPropertyChanging();
					this._CORREO = value;
					this.SendPropertyChanged("CORREO");
					this.OnCORREOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PROFESOR_CURSO", Storage="_CURSO", ThisKey="CARNET", OtherKey="PROFESOR")]
		public EntitySet<CURSO> CURSO
		{
			get
			{
				return this._CURSO;
			}
			set
			{
				this._CURSO.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PROFESOR_MENSAJE", Storage="_MENSAJE", ThisKey="CARNET", OtherKey="PROFESOR")]
		public EntitySet<MENSAJE> MENSAJE
		{
			get
			{
				return this._MENSAJE;
			}
			set
			{
				this._MENSAJE.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CURSO(CURSO entity)
		{
			this.SendPropertyChanging();
			entity.PROFESOR1 = this;
		}
		
		private void detach_CURSO(CURSO entity)
		{
			this.SendPropertyChanging();
			entity.PROFESOR1 = null;
		}
		
		private void attach_MENSAJE(MENSAJE entity)
		{
			this.SendPropertyChanging();
			entity.PROFESOR1 = this;
		}
		
		private void detach_MENSAJE(MENSAJE entity)
		{
			this.SendPropertyChanging();
			entity.PROFESOR1 = null;
		}
	}
}
#pragma warning restore 1591
